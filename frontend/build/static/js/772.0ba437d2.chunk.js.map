{"version":3,"file":"static/js/772.0ba437d2.chunk.js","mappings":"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","sources":["hooks/useFormDataChange.ts","pages/SigninPage/SigninHeader/SigninHeader.tsx","pages/SigninPage/SigninForm/Actions/ForgotPasswordLink/ForgotPasswordLink.tsx","pages/SigninPage/SigninForm/Actions/SignupLink/SignupLink.tsx","pages/SigninPage/SigninForm/SigninForm.tsx","pages/SigninPage/SigninPage.tsx"],"sourcesContent":["import { useState, ChangeEvent } from \"react\";\n\ntype FormData = {\n  [key: string]: any;\n};\n\nexport default function useFormDataChange<T extends FormData>(initialFormData: T) {\n  if (typeof initialFormData !== \"object\" || initialFormData === null) {\n    throw new Error(\"The useFormHook only accepts the initialData value as an object.\");\n  }\n\n  const [formData, setFormData] = useState<T>(initialFormData);\n\n  function handleFormDataChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) {\n    const { name, type, value } = event.target;\n\n    // Narrow down to HTMLInputElement for 'checked'\n    const checked = type === \"checkbox\" && event.target instanceof HTMLInputElement\n      ? event.target.checked\n      : undefined;\n\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n  }\n\n  return [formData, handleFormDataChange] as const;\n}\n","import React from 'react'\nimport './SigninHeader.css'\nimport { Link } from 'react-router-dom'\nimport { AppLogo } from 'components'\nimport { LazyIconImport } from 'lazyUtils/LazyIconImport/LazyIconImport'\n\nconst SigninHeader: React.FC = (props) => {\n  return (\n    <div className='signin-header'>\n      <AppLogo size={60} />\n      <h3 className='form-label'>Sign in</h3>\n      <p className='-form-discription'>\n        sign in with existing creadintials\n      </p>\n      <Link to='../' className='link back-link'>\n        <span className='icon'>\n          <LazyIconImport icon='arrowBack' />\n        </span>\n        <span className='label'>Back</span>\n      </Link>\n    </div>\n  )\n}\n\nexport default SigninHeader\n","import React from 'react'\nimport './ForgotPasswordLink.css'\nimport { Link } from 'react-router-dom'\n\nconst ForgotPasswordLink: React.FC = (props) => {\n  return (\n    <Link\n      to='/forgot-password'\n      className='forgot-password-link'\n    >\n      forgot password\n    </Link>\n  )\n}\n\nexport default ForgotPasswordLink\n","import React from 'react'\nimport './SignupLink.css'\nimport { Link } from 'react-router-dom'\nimport { LazyIconImport } from 'lazyUtils/LazyIconImport/LazyIconImport'\n\nconst SignupLink: React.FC = (props) => {\n  return (\n    <Link to='/signup' className='link signup-action-link'>\n      <span className='icon'>\n        <LazyIconImport icon='signup' />\n      </span>\n      <span className='label'>Sign up</span>\n    </Link>\n  )\n}\n\nexport default SignupLink\n","import React from 'react'\nimport './SigninForm.css'\nimport { Navigate } from 'react-router-dom'\nimport { Input } from 'components'\nimport ForgotPasswordLink from './Actions/ForgotPasswordLink/ForgotPasswordLink'\nimport SignupLink from './Actions/SignupLink/SignupLink'\nimport authActions from 'features/auth'\nimport { useDispatch } from 'react-redux'\nimport { DisplayErrors } from 'components'\nimport useFormDataChange from 'hooks/useFormDataChange'\nimport { SigninCredentials } from 'API/API.types'\nimport { ActionButton } from 'components'\n\nconst SigninForm: React.FC = (props) => {\n\n  const dispatch = useDispatch()\n  const { status, message, errors } = authActions.useSigninSelector()\n  const [formData, handleFormDataChange] = useFormDataChange<SigninCredentials>({\n    email: '',\n    password: ''\n  })\n\n  if (status === 'succeeded') {\n    return <Navigate to='/home' />\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    dispatch(\n      authActions.signinThunk(formData) as any\n    )\n  }\n\n  return (\n    <form\n      className='signin-form'\n      onSubmit={handleSubmit}\n    >\n      <Input\n        name='email'\n        type='text'\n        value={formData.email}\n        onChange={handleFormDataChange}\n        isDisabled={status === 'loading'}\n        errorMessage={\n          (errors.email === undefined) ? undefined : errors.email\n        }\n      />\n      <Input\n        name='password'\n        type='password'\n        value={formData.password}\n        onChange={handleFormDataChange}\n        isDisabled={status === 'loading'}\n        errorMessage={\n          (errors.password === undefined) ? undefined : errors.password\n        }\n      />\n      {(errors.non_field_errors !== undefined)\n        && <DisplayErrors message={errors.non_field_errors} />\n      }\n      <div className='actions'>\n        <span></span>\n        <ForgotPasswordLink />\n      </div>\n      <div className='actions'>\n        <SignupLink />\n        <ActionButton\n          icon='signin'\n          isLoaderOn={status === 'loading'}\n        >\n          Sign in\n        </ActionButton>\n      </div>\n    </form>\n  )\n}\n\nexport default SigninForm\n","import React from 'react'\nimport './SigninPage.css'\nimport { Navigate } from 'react-router-dom'\nimport { isAuthenticated } from 'utils/isAuthenticted'\nimport SigninHeader from './SigninHeader/SigninHeader'\nimport SigninForm from './SigninForm/SigninForm'\n\nconst SigninPage: React.FC = (props) => {\n  if (isAuthenticated()) {\n    return (\n      <Navigate to={'/home'} />\n    )\n  }\n  return (\n    <div className='signin-page'>\n      <SigninHeader />\n      <SigninForm />\n    </div>\n  )\n}\n\nexport default SigninPage\n"],"names":["useFormDataChange","initialFormData","Error","formData","setFormData","useState","event","name","type","value","target","checked","HTMLInputElement","undefined","prevFormData","_objectSpread","props","_jsxs","className","children","_jsx","AppLogo","size","Link","to","LazyIconImport","icon","dispatch","useDispatch","status","message","errors","authActions","useSigninSelector","handleFormDataChange","email","password","Navigate","onSubmit","preventDefault","signinThunk","Input","onChange","isDisabled","errorMessage","non_field_errors","DisplayErrors","ForgotPasswordLink","SignupLink","ActionButton","isLoaderOn","isAuthenticated","SigninHeader","SigninForm"],"sourceRoot":""}