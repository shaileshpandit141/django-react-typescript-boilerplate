{"version":3,"file":"static/js/7.f31e3bea.chunk.js","mappings":"0IAMe,SAASA,EAAsCC,GAC5D,GAA+B,kBAApBA,GAAoD,OAApBA,EACzC,MAAM,IAAIC,MAAM,oEAGlB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAYJ,GAgB5C,MAAO,CAACE,EAdR,SAA8BG,GAC5B,MAAM,KAAEC,EAAI,KAAEC,EAAI,MAAEC,GAAUH,EAAMI,OAG9BC,EAAmB,aAATH,GAAuBF,EAAMI,kBAAkBE,iBAC3DN,EAAMI,OAAOC,aACbE,EAEJT,GAAaU,IAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpBD,GAAY,IACf,CAACP,GAAgB,aAATC,EAAsBG,EAAUF,KAE5C,EAGF,C,mGCtBA,MAkBA,EAlBgCO,IAE5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,KAAM,MACfF,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,aAC3BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,oBAAmBC,SAAC,2BAGjCF,EAAAA,EAAAA,MAACM,EAAAA,GAAI,CAACC,GAAG,MAAMN,UAAU,iBAAgBC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,UACpBC,EAAAA,EAAAA,KAACK,EAAAA,EAAc,CAACC,KAAK,iBAEvBN,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAC,e,wBCDhC,MA+BA,EA/B4BQ,KAC1B,MAAOxB,EAAUyB,IAAwB5B,EAAAA,EAAAA,GAA4B,CACnE6B,MAAO,GACPC,SAAU,GACVC,iBAAkB,KAwBpB,MAAO,CArBwB,CAC7B,CACExB,KAAM,QACNC,KAAM,QACNC,MAAON,EAAS0B,MAChBG,SAAUJ,GAEZ,CACErB,KAAM,WACNC,KAAM,WACNC,MAAON,EAAS2B,SAChBE,SAAUJ,GAEZ,CACErB,KAAM,mBACNC,KAAM,WACNC,MAAON,EAAS4B,iBAChBC,SAAUJ,IAIMzB,EAAS,EC9B/B,EAXgCa,IAE5BC,EAAAA,EAAAA,MAAA,UAAQC,UAAU,8BAA6BC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,UACpBC,EAAAA,EAAAA,KAACK,EAAAA,EAAc,CAACC,KAAK,cAEvBN,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAC,eCkC9B,EArC8BH,IAE5B,MAAOiB,EAAY9B,GAAYwB,IAOzBO,EAASD,EAAWE,KAAI,CAACC,EAAOC,KACpCjB,EAAAA,EAAAA,KAACkB,EAAAA,IAAKvB,EAAAA,EAAAA,GAAA,GAEAqB,GADCC,KAKT,OACEpB,EAAAA,EAAAA,MAAA,QACEC,UAAU,cACVqB,SAfkBjC,IACpBA,EAAMkC,iBACNC,QAAQC,IAAIvC,EAAS,EAaIgB,SAAA,CAEtBe,GACDjB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAACuB,EAAAA,GAAU,CACTnB,GAAG,WACHhB,KAAK,OACLkB,KAAK,SACLR,UAAU,cAAaC,SACxB,aAGDC,EAAAA,EAAAA,KAACwB,EAAY,SAEV,EC1BX,EAT8B5B,IAE1BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAACyB,EAAY,KACbzB,EAAAA,EAAAA,KAAC0B,EAAU,M","sources":["hooks/useFormDataChange.ts","pages/SignupPage/SignupHeader/SignupHeader.tsx","pages/SignupPage/SignupForm/hooks/useSignupFormFileds.ts","pages/SignupPage/SignupForm/Actions/SignupButton/SignupButton.tsx","pages/SignupPage/SignupForm/SignupForm.tsx","pages/SignupPage/SignupPage.tsx"],"sourcesContent":["import { useState, ChangeEvent } from \"react\";\n\ntype FormData = {\n  [key: string]: any;\n};\n\nexport default function useFormDataChange<T extends FormData>(initialFormData: T) {\n  if (typeof initialFormData !== \"object\" || initialFormData === null) {\n    throw new Error(\"The useFormHook only accepts the initialData value as an object.\");\n  }\n\n  const [formData, setFormData] = useState<T>(initialFormData);\n\n  function handleFormDataChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) {\n    const { name, type, value } = event.target;\n\n    // Narrow down to HTMLInputElement for 'checked'\n    const checked = type === \"checkbox\" && event.target instanceof HTMLInputElement\n      ? event.target.checked\n      : undefined;\n\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n  }\n\n  return [formData, handleFormDataChange] as const;\n}\n","import React from 'react'\nimport './SignupHeader.css'\nimport { Link } from 'react-router-dom'\nimport { AppLogo } from 'components'\nimport { LazyIconImport } from 'lazyUtils/LazyIconImport/LazyIconImport'\n\nconst SignupHeader: React.FC = (props) => {\n  return (\n    <div className='signup-header'>\n      <AppLogo size={60} />\n      <h3 className='form-label'>Sign up</h3>\n      <p className='-form-discription'>\n        create an new account\n      </p>\n      <Link to='../' className='link back-link'>\n        <span className='icon'>\n          <LazyIconImport icon='arrowBack' />\n        </span>\n        <span className='label'>Back</span>\n      </Link>\n    </div>\n  )\n}\n\nexport default SignupHeader\n","import useFormDataChange from \"hooks/useFormDataChange\"\n\ninterface FormData {\n  email: string;\n  password: string;\n  confirm_password: string;\n}\n\ninterface FormField {\n  name: string;\n  type: 'email' | 'password' | 'checkbox';\n  value: string | boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\ntype FormFields = FormField[];\n\nconst useSignupFormFields = (): [FormFields, FormData] => {\n  const [formData, handleFormDataChange] = useFormDataChange<FormData>({\n    email: '',\n    password: '',\n    confirm_password: ''\n  })\n\n  const formFields: FormFields = [\n    {\n      name: 'email',\n      type: 'email',\n      value: formData.email,\n      onChange: handleFormDataChange\n    },\n    {\n      name: 'password',\n      type: 'password',\n      value: formData.password,\n      onChange: handleFormDataChange\n    },\n    {\n      name: 'confirm_password',\n      type: 'password',\n      value: formData.confirm_password,\n      onChange: handleFormDataChange\n    }\n  ]\n  \n  return [formFields, formData]\n}\n\nexport default useSignupFormFields\n","import React from 'react'\nimport './SignupButton.css'\nimport { LazyIconImport } from 'lazyUtils/LazyIconImport/LazyIconImport'\n\nconst SignupButton: React.FC = (props) => {\n  return (\n    <button className='button signup-action-button'>\n      <span className='icon'>\n        <LazyIconImport icon='signup' />\n      </span>\n      <span className='label'>Sign up</span>\n    </button>\n  )\n}\n\nexport default SignupButton\n","import React from 'react'\nimport './SignupForm.css'\nimport { Input } from 'components'\nimport useSignupFormFields from './hooks/useSignupFormFileds'\nimport { AnchorLink } from 'components'\nimport SignupButton from './Actions/SignupButton/SignupButton'\n\nconst SignupForm: React.FC = (props) => {\n\n  const [formFields, formData] = useSignupFormFields()\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    console.log(formData)\n  }\n\n  const fields = formFields.map((field, index) => (\n    <Input\n      key={index}\n      {...field}\n    />\n  ))\n\n  return (\n    <form\n      className='signup-form'\n      onSubmit={handleSubmit}\n    >\n      {fields}\n      <div className='actions'>\n        <AnchorLink \n          to=\"/sign-in\" \n          type=\"link\"\n          icon='signin'\n          className='signin-link'\n        >\n          sign in\n        </AnchorLink>\n        <SignupButton />\n      </div>\n    </form>\n  )\n}\n\nexport default SignupForm\n","import React from 'react'\nimport './SignupPage.css'\nimport SignupHeader from './SignupHeader/SignupHeader'\nimport SignupForm from './SignupForm/SignupForm'\n\nconst SignupPage: React.FC = (props) => {\n  return (\n    <div className='signup-page'>\n      <SignupHeader />\n      <SignupForm />\n    </div>\n  )\n}\n\nexport default SignupPage\n"],"names":["useFormDataChange","initialFormData","Error","formData","setFormData","useState","event","name","type","value","target","checked","HTMLInputElement","undefined","prevFormData","_objectSpread","props","_jsxs","className","children","_jsx","AppLogo","size","Link","to","LazyIconImport","icon","useSignupFormFields","handleFormDataChange","email","password","confirm_password","onChange","formFields","fields","map","field","index","Input","onSubmit","preventDefault","console","log","AnchorLink","SignupButton","SignupHeader","SignupForm"],"sourceRoot":""}