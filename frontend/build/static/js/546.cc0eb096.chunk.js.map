{"version":3,"file":"static/js/546.cc0eb096.chunk.js","mappings":"0MAWA,MA+DA,EA/DwCA,KACtC,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MACZ,OAAEC,EAAM,QAAEC,EAAO,OAAEC,EAAM,KAAEC,IAASC,EAAAA,EAAAA,MAqB1C,OAZAC,EAAAA,EAAAA,YAAU,KACO,cAAXL,GACFM,EAAAA,EAAAA,IAAa,UAAWL,GACJ,WAAXD,IACTM,EAAAA,EAAAA,IAAa,QAASL,EACxB,GACC,CAACA,EAASD,KAEbO,EAAAA,EAAAA,KAAsB,MACpBC,EAAAA,EAAAA,KAAwB,KAIxBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,yBAC3BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mBAAkBC,SAAC,8DAIlCF,EAAAA,EAAAA,MAAA,QACEC,UAAU,OACVG,SA7BgBC,IACpBA,EAAMC,kBACNC,EAAAA,EAAAA,IAAkB,CAChBlB,MAAOA,GAAS,IAChB,EAyByBa,SAAA,EAEvBC,EAAAA,EAAAA,KAACK,EAAAA,GAAiB,CAACC,MAAO,OAAQhB,OAAQA,KAC1CU,EAAAA,EAAAA,KAACK,EAAAA,GAAiB,CAACC,MAAO,QAAShB,OAAQA,KACtC,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMgB,UACLP,EAAAA,EAAAA,KAAA,KAAAD,SAAIR,EAAKgB,UAEXV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAACQ,EAAAA,GAAO,CACNC,GAAG,SACHC,KAAK,OACLZ,UAAU,iBACVa,SAAS,YAAWZ,SACrB,UACDC,EAAAA,EAAAA,KAACY,EAAAA,GAAM,CACLF,KAAK,SACLC,SAAqB,cAAXvB,EAAyB,cAAgB,QACnDU,UAAU,SACVe,WAAuB,YAAXzB,EACZ0B,WAAuB,cAAX1B,EAAuBW,SACpC,cAES,cAAXX,IACCY,EAAAA,EAAAA,KAACe,EAAAA,GAAU,SAGX,C","sources":["pages/VerifyUserAccountPage/VerifyUserAccountPage.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./VerifyUserAccountPage.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useResetOnRouteChange } from \"hooks\";\nimport { NavLink, Button, DisplayFormErrors, SigninLink } from 'components'\nimport {\n  useVerifyUserAccountSelector, verifyUserAccount, resetVerifyUserAccount\n} from 'features/auth/verifyUserAccount'\nimport { triggerToast } from 'features/toast'\n\n\nconst VerifyUserAccountPage: React.FC = (): JSX.Element => {\n  const { token } = useParams<{ token: string }>();\n  const { status, message, errors, data } = useVerifyUserAccountSelector();\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    verifyUserAccount({\n      token: token || ''\n    })\n  }\n\n  useEffect(() => {\n    if (status === \"succeeded\") {\n      triggerToast(\"success\", message)\n    } else if (status === \"failed\") {\n      triggerToast(\"error\", message)\n    }\n  }, [message, status])\n\n  useResetOnRouteChange(() => {\n    resetVerifyUserAccount();\n  });\n\n  return (\n    <div className=\"verify-user-account-page\">\n      <div className='header'>\n        <h3 className='form-label'>Verify your account</h3>\n        <p className='form-description'>\n          Click the Verify button below to verify your account.\n        </p>\n      </div>\n      <form\n        className='form'\n        onSubmit={handleSubmit}\n      >\n        <DisplayFormErrors field={'none'} errors={errors} />\n        <DisplayFormErrors field={'token'} errors={errors} />\n        {data?.detail && (\n          <p>{data.detail}</p>\n        )}\n        <div className='actions'>\n          <NavLink\n            to='../../'\n            type='link'\n            className='link back-link'\n            iconName='arrowBack'\n          >Back</NavLink>\n          <Button\n            type='submit'\n            iconName={status === 'succeeded' ? 'checkCircle' : 'click'}\n            className='button'\n            isLoaderOn={status === 'loading'}\n            isDisabled={status === 'succeeded'}\n          >Verify</Button>\n        </div>\n        {status === \"succeeded\" && (\n          <SigninLink />\n        )}\n      </form>\n    </div>\n  )\n}\n\nexport default VerifyUserAccountPage;\n"],"names":["VerifyUserAccountPage","token","useParams","status","message","errors","data","useVerifyUserAccountSelector","useEffect","triggerToast","useResetOnRouteChange","resetVerifyUserAccount","_jsxs","className","children","_jsx","onSubmit","event","preventDefault","verifyUserAccount","DisplayFormErrors","field","detail","NavLink","to","type","iconName","Button","isLoaderOn","isDisabled","SigninLink"],"sourceRoot":""}