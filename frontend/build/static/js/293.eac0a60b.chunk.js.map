{"version":3,"file":"static/js/293.eac0a60b.chunk.js","mappings":"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","sources":["hooks/useFormDataChange.ts","pages/SignupPage/SignupHeader/SignupHeader.tsx","pages/SignupPage/SignupForm/SignupForm.tsx","pages/SignupPage/SignupPage.tsx"],"sourcesContent":["import { useState, ChangeEvent } from \"react\";\n\ntype FormData = {\n  [key: string]: any;\n};\n\nexport function useFormDataChange<T extends FormData>(initialFormData: T) {\n  if (typeof initialFormData !== \"object\" || initialFormData === null) {\n    throw new Error(\"The useFormHook only accepts the initialData value as an object.\");\n  }\n\n  const [formData, setFormData] = useState<T>(initialFormData);\n\n  function handleFormDataChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) {\n    const { name, type, value } = event.target;\n\n    // Narrow down to HTMLInputElement for 'checked'\n    const checked = type === \"checkbox\" && event.target instanceof HTMLInputElement\n      ? event.target.checked\n      : undefined;\n\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n  }\n\n  return [formData, handleFormDataChange] as const;\n}\n","import React from 'react'\nimport './SignupHeader.css'\nimport { Link } from 'react-router-dom'\nimport { AppLogo } from 'components'\nimport { LazyIcon } from 'lazyUtils/LazyIcon/LazyIcon'\n\nconst SignupHeader: React.FC = (props) => {\n  return (\n    <div className='signup-header'>\n      <AppLogo size={60} />\n      <h3 className='form-label'>Sign up</h3>\n      <p className='-form-discription'>\n        create an new account\n      </p>\n      <Link to='../' className='link back-link'>\n        <span className='icon'>\n          <LazyIcon iconName='arrowBack' />\n        </span>\n        <span className='label'>Back</span>\n      </Link>\n    </div>\n  )\n}\n\nexport default SignupHeader\n","import React, { useEffect } from 'react'\nimport './SignupForm.css'\nimport { Input } from 'components'\nimport { AnchorLink, Button } from 'components'\nimport {\n  signupThunk,\n  useSignupSelector,\n  resetSignupState\n} from 'features/auth'\nimport { useDispatch } from 'react-redux'\nimport { DisplayErrors } from 'components'\nimport { useFormDataChange } from 'hooks/useFormDataChange'\nimport { SignupCredentials } from 'API/API.types'\n\nconst SignupForm: React.FC = (props) => {\n\n  const dispatch = useDispatch()\n  const { status, errors, data } = useSignupSelector()\n  const [formData, handleFormDataChange] = useFormDataChange<SignupCredentials>({\n    email: '',\n    password: '',\n    confirm_password: '',\n  })\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    dispatch(\n      signupThunk(formData) as any\n    )\n  }\n\n  useEffect(() => {\n    dispatch(\n      resetSignupState()\n    )\n  }, [dispatch]);\n\n  return (\n    <form\n      className='signup-form'\n      onSubmit={handleSubmit}\n    >\n      <Input\n        name='email'\n        type='email'\n        value={formData.email}\n        onChange={handleFormDataChange}\n        isDisabled={status === 'loading' || status === 'succeeded'}\n        errorMessage={errors?.email\n          && errors.email\n        }\n      />\n      <Input\n        name='password'\n        type='password'\n        value={formData.password}\n        onChange={handleFormDataChange}\n        isDisabled={status === 'loading' || status === 'succeeded'}\n        errorMessage={errors?.password\n          && errors.password\n        }\n      />\n      <Input\n        name='confirm_password'\n        type='password'\n        value={formData.confirm_password}\n        onChange={handleFormDataChange}\n        isDisabled={status === 'loading' || status === 'succeeded'}\n        errorMessage={errors?.confirm_password\n          && errors.confirm_password\n        }\n      />\n      {errors?.non_field_errors\n        && <DisplayErrors message={errors.non_field_errors} />\n      }\n      {data?.detail && (\n        <p>{data.detail}</p>\n      )}\n      <div className='actions'>\n        <AnchorLink\n          to=\"/sign-in\"\n          type=\"link\"\n          iconName='signin'\n          className='signin-link'\n        >\n          sign in\n        </AnchorLink>\n        <Button\n          type='submit'\n          iconName='signup'\n          label='Sign up'\n          className='signup-button'\n          isLoaderOn={status === 'loading'}\n          isDisabled={status === 'succeeded'}\n        />\n      </div>\n    </form>\n  )\n}\n\nexport default SignupForm\n","import React from 'react'\nimport './SignupPage.css'\nimport SignupHeader from './SignupHeader/SignupHeader'\nimport SignupForm from './SignupForm/SignupForm'\n\nconst SignupPage: React.FC = (props) => {\n  return (\n    <div className='signup-page'>\n      <SignupHeader />\n      <SignupForm />\n    </div>\n  )\n}\n\nexport default SignupPage\n"],"names":["useFormDataChange","initialFormData","Error","formData","setFormData","useState","event","name","type","value","target","checked","HTMLInputElement","undefined","prevFormData","_objectSpread","props","_jsxs","className","children","_jsx","AppLogo","size","Link","to","LazyIcon","iconName","dispatch","useDispatch","status","errors","data","useSignupSelector","handleFormDataChange","email","password","confirm_password","useEffect","resetSignupState","onSubmit","preventDefault","signupThunk","Input","onChange","isDisabled","errorMessage","non_field_errors","DisplayErrors","message","detail","AnchorLink","Button","label","isLoaderOn","SignupHeader","SignupForm"],"sourceRoot":""}