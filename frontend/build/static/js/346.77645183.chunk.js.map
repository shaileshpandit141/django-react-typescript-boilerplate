{"version":3,"file":"static/js/346.77645183.chunk.js","mappings":"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","sources":["hooks/useFormDataChange.ts","pages/SigninPage/SigninHeader/SigninHeader.tsx","pages/SigninPage/SigninForm/SigninForm.tsx","pages/SigninPage/SigninPage.tsx"],"sourcesContent":["import { useState, ChangeEvent } from \"react\";\n\ntype FormData = {\n  [key: string]: any;\n};\n\nexport function useFormDataChange<T extends FormData>(initialFormData: T) {\n  if (typeof initialFormData !== \"object\" || initialFormData === null) {\n    throw new Error(\"The useFormHook only accepts the initialData value as an object.\");\n  }\n\n  const [formData, setFormData] = useState<T>(initialFormData);\n\n  function handleFormDataChange(event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) {\n    const { name, type, value } = event.target;\n\n    // Narrow down to HTMLInputElement for 'checked'\n    const checked = type === \"checkbox\" && event.target instanceof HTMLInputElement\n      ? event.target.checked\n      : undefined;\n\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n  }\n\n  return [formData, handleFormDataChange] as const;\n}\n","import React from 'react'\nimport './SigninHeader.css'\nimport { Link } from 'react-router-dom'\nimport { AppLogo } from 'components'\nimport { LazyIcon } from 'lazyUtils/LazyIcon/LazyIcon'\n\nconst SigninHeader: React.FC = (props) => {\n  return (\n    <div className='signin-header'>\n      <AppLogo size={60} />\n      <h3 className='form-label'>Sign in</h3>\n      <p className='-form-discription'>\n        sign in with existing creadintials\n      </p>\n      <Link to='../' className='link back-link'>\n        <span className='icon'>\n          <LazyIcon iconName='arrowBack' />\n        </span>\n        <span className='label'>Back</span>\n      </Link>\n    </div>\n  )\n}\n\nexport default SigninHeader\n","import React, { useEffect } from 'react'\nimport './SigninForm.css'\nimport { Navigate, Link } from 'react-router-dom'\nimport { Input } from 'components'\nimport { AnchorLink } from 'components'\nimport { signinThunk, useSigninSelector, resetSignoutState } from 'features/auth'\nimport { useDispatch } from 'react-redux'\nimport { DisplayFormErrors } from 'components'\nimport { useFormDataChange } from 'hooks/useFormDataChange'\nimport { SigninCredentials } from 'API/API.types'\nimport { Button } from 'components'\nimport { triggerToast } from 'features/toast'\n\nconst SigninForm: React.FC = () => {\n\n  const dispatch = useDispatch()\n  const { status, message, errors } = useSigninSelector()\n  const [formData, handleFormDataChange] = useFormDataChange<SigninCredentials>({\n    email: '',\n    password: ''\n  })\n\n  useEffect(() => {\n    dispatch(resetSignoutState())\n    if (status === \"succeeded\") {\n      triggerToast(dispatch, \"success\", message)\n    } else if (status === \"failed\") {\n      triggerToast(dispatch, \"error\", message)\n    }\n  }, [dispatch, message, status])\n\n  if (status === 'succeeded') {\n    return <Navigate to='/home' />\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    dispatch(\n      signinThunk(formData) as any\n    )\n  }\n\n  return (\n    <form\n      className='signin-form'\n      onSubmit={handleSubmit}\n    >\n      <Input\n        name='email'\n        type='text'\n        value={formData.email}\n        onChange={handleFormDataChange}\n        isDisabled={status === 'loading'}\n      />\n      <Input\n        name='password'\n        type='password'\n        value={formData.password}\n        onChange={handleFormDataChange}\n        isDisabled={status === 'loading'}\n      />\n      <DisplayFormErrors field={'none'} errors={errors} />\n      <div className='actions'>\n        <span></span>\n        <Link\n          to='/forgot-password'\n          className='forgot-password-link'\n        >\n          forgot password\n        </Link>\n      </div>\n      <div className='actions'>\n        <AnchorLink\n          to=\"/sign-up\"\n          type=\"link\"\n          iconName='signin'\n          className='sign-link'\n        >sign up</AnchorLink>\n        <Button\n          type='submit'\n          iconName='signin'\n          className='signin-button'\n          isLoaderOn={status === 'loading'}\n        >sign in</Button>\n      </div>\n    </form>\n  )\n}\n\nexport default SigninForm\n","import React from 'react'\nimport './SigninPage.css'\nimport { Navigate } from 'react-router-dom'\nimport { isAuthenticated } from 'features/auth'\nimport SigninHeader from './SigninHeader/SigninHeader'\nimport SigninForm from './SigninForm/SigninForm'\n\nconst SigninPage: React.FC = (props) => {\n  if (isAuthenticated()) {\n    return (\n      <Navigate to={'/home'} />\n    )\n  }\n\n  return (\n    <div className='signin-page'>\n      <SigninHeader />\n      <SigninForm />\n    </div>\n  )\n}\n\nexport default SigninPage\n"],"names":["useFormDataChange","initialFormData","Error","formData","setFormData","useState","event","name","type","value","target","checked","HTMLInputElement","undefined","prevFormData","_objectSpread","props","_jsxs","className","children","_jsx","AppLogo","size","Link","to","LazyIcon","iconName","SigninForm","dispatch","useDispatch","status","message","errors","useSigninSelector","handleFormDataChange","email","password","useEffect","resetSignoutState","triggerToast","Navigate","onSubmit","preventDefault","signinThunk","Input","onChange","isDisabled","DisplayFormErrors","field","AnchorLink","Button","isLoaderOn","isAuthenticated","SigninHeader"],"sourceRoot":""}