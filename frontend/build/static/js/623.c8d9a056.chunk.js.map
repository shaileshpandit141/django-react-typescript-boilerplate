{"version":3,"file":"static/js/623.c8d9a056.chunk.js","mappings":"oNAUA,MA2EA,EA3E6BA,KAE3B,MAAMC,GAAWC,EAAAA,EAAAA,OACX,OAAEC,EAAM,QAAEC,EAAO,OAAEC,IAAWC,EAAAA,EAAAA,OAC7BC,EAAUC,IAAwBC,EAAAA,EAAAA,IAAqC,CAC5EC,MAAO,GACPC,SAAU,KAkBZ,OAVAC,EAAAA,EAAAA,YAAU,KACO,cAAXT,IACFU,EAAAA,EAAAA,IAAa,UAAWT,GACxBH,EAAS,UACW,WAAXE,KACTU,EAAAA,EAAAA,IAAa,QAAST,IACtBU,EAAAA,EAAAA,MACF,GACC,CAACX,EAAQC,EAASH,KAEjBc,EAAAA,EAAAA,MACKC,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,WAIpBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACrBL,EAAAA,EAAAA,KAAA,MAAII,UAAU,aAAYC,SAAC,aAC3BL,EAAAA,EAAAA,KAAA,KAAGI,UAAU,mBAAkBC,SAAC,gDAIlCF,EAAAA,EAAAA,MAAA,QACEC,UAAU,OACVE,SA7BgBC,IACpBA,EAAMC,kBACNC,EAAAA,EAAAA,IAAWlB,EAAS,EA2BOc,SAAA,EAEvBL,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CACJC,KAAK,QACLC,KAAK,OACLC,MAAOtB,EAASG,MAChBoB,SAAUtB,EACVuB,WAAuB,YAAX5B,KAEda,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CACJC,KAAK,WACLC,KAAK,WACLC,MAAOtB,EAASI,SAChBmB,SAAUtB,EACVuB,WAAuB,YAAX5B,KAEda,EAAAA,EAAAA,KAACgB,EAAAA,GAAiB,CAACC,MAAO,OAAQ5B,OAAQA,KAC1Cc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BL,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CACHhB,GAAG,mBAAkBG,SACtB,wBAEHF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBL,EAAAA,EAAAA,KAACmB,EAAAA,GAAU,KACXnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAM,CACLR,KAAK,SACLS,SAAS,SACTjB,UAAU,SACVkB,WAAuB,YAAXnC,EAAqBkB,SAClC,oBAGD,C","sources":["pages/SigninPage/SigninPage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './SigninPage.css';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport { useFormDataChange } from 'hooks';\nimport { isAuthenticated } from 'utils';\nimport { Input, DisplayFormErrors, Button, SignupLink } from 'components';\nimport { signinUser, resetSigninUser, useSigninUserSelector } from 'features/auth/signin';\nimport { SigninCredentials } from 'services/authServices';\nimport { triggerToast } from 'features/toast';\n\nconst SigninPage: React.FC = () => {\n\n  const navigate = useNavigate()\n  const { status, message, errors } = useSigninUserSelector()\n  const [formData, handleFormDataChange] = useFormDataChange<SigninCredentials>({\n    email: '',\n    password: ''\n  })\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    signinUser(formData)\n  }\n\n  useEffect(() => {\n    if (status === \"succeeded\") {\n      triggerToast(\"success\", message)\n      navigate(\"/home\")\n    } else if (status === \"failed\") {\n      triggerToast(\"error\", message)\n      resetSigninUser();\n    }\n  }, [status, message, navigate])\n\n  if (isAuthenticated()) {\n    return <Navigate to=\"/home\" />\n  }\n\n  return (\n    <div className='signin-page'>\n      <div className='header'>\n        <h3 className='form-label'>Sign in</h3>\n        <p className='form-description'>\n          Sign in with your existing credentials.\n        </p>\n      </div>\n      <form\n        className='form'\n        onSubmit={handleSubmit}\n      >\n        <Input\n          name='email'\n          type='text'\n          value={formData.email}\n          onChange={handleFormDataChange}\n          isDisabled={status === 'loading'}\n        />\n        <Input\n          name='password'\n          type='password'\n          value={formData.password}\n          onChange={handleFormDataChange}\n          isDisabled={status === 'loading'}\n        />\n        <DisplayFormErrors field={'none'} errors={errors} />\n        <div className='split-container'>\n          <span></span>\n          <Link\n            to='/forgot-password'\n          >Forgot password</Link>\n        </div>\n        <div className='actions'>\n          <SignupLink />\n          <Button\n            type='submit'\n            iconName='signin'\n            className='button'\n            isLoaderOn={status === 'loading'}\n          >sign in</Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default SigninPage\n"],"names":["SigninPage","navigate","useNavigate","status","message","errors","useSigninUserSelector","formData","handleFormDataChange","useFormDataChange","email","password","useEffect","triggerToast","resetSigninUser","isAuthenticated","_jsx","Navigate","to","_jsxs","className","children","onSubmit","event","preventDefault","signinUser","Input","name","type","value","onChange","isDisabled","DisplayFormErrors","field","Link","SignupLink","Button","iconName","isLoaderOn"],"sourceRoot":""}