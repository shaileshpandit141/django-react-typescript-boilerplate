{"version":3,"file":"static/js/293.73c2d974.chunk.js","mappings":"qLAMA,MAoBA,EApBgCA,IAE5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CAACC,KAAM,MACpBF,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,aAC3BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mBAAkBC,SAAC,yCAIlCF,EAAAA,EAAAA,MAACM,EAAAA,GAAI,CAACC,GAAG,MAAMN,UAAU,iBAAgBC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,UACpBC,EAAAA,EAAAA,KAACK,EAAAA,EAAQ,CAACC,SAAS,iBAErBN,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAAC,e,kCCRhC,MA4EA,EA5E8BH,IAE5B,MAAM,OAAEW,EAAM,QAAEC,EAAO,OAAEC,EAAM,KAAEC,IAASC,EAAAA,EAAAA,OACnCC,EAAUC,IAAwBC,EAAAA,EAAAA,GAAqC,CAC5EC,MAAO,GACPC,SAAU,GACVC,iBAAkB,KAkBpB,OAVAC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,MACe,cAAXZ,GACFa,EAAAA,EAAAA,IAAa,UAAWZ,GACJ,WAAXD,IACTa,EAAAA,EAAAA,IAAa,QAASZ,EACxB,GACC,CAACA,EAASD,KAIXV,EAAAA,EAAAA,MAAA,QACEC,UAAU,cACVuB,SAlBkBC,IACpBA,EAAMC,kBACNC,EAAAA,EAAAA,IAAqBZ,EAAS,EAgBLb,SAAA,EAEvBC,EAAAA,EAAAA,KAACyB,EAAAA,GAAK,CACJC,KAAK,QACLC,KAAK,QACLC,MAAOhB,EAASG,MAChBc,SAAUhB,EACViB,WAAuB,YAAXvB,GAAmC,cAAXA,EACpCE,OAAQA,KAEVT,EAAAA,EAAAA,KAACyB,EAAAA,GAAK,CACJC,KAAK,WACLC,KAAK,WACLC,MAAOhB,EAASI,SAChBa,SAAUhB,EACViB,WAAuB,YAAXvB,GAAmC,cAAXA,EACpCE,OAAQA,KAEVT,EAAAA,EAAAA,KAACyB,EAAAA,GAAK,CACJC,KAAK,mBACLC,KAAK,WACLC,MAAOhB,EAASK,iBAChBY,SAAUhB,EACViB,WAAuB,YAAXvB,GAAmC,cAAXA,EACpCE,OAAQA,KAEVT,EAAAA,EAAAA,KAAC+B,EAAAA,GAAiB,CAACC,MAAO,OAAQvB,OAAQA,KACrC,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMuB,UACLjC,EAAAA,EAAAA,KAAA,KAAAD,SAAIW,EAAKuB,UAEXpC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAACkC,EAAAA,GAAU,CACT9B,GAAG,WACHuB,KAAK,OACLrB,SAAS,SACTR,UAAU,cAAaC,SACxB,aACDC,EAAAA,EAAAA,KAACmC,EAAAA,GAAM,CACLR,KAAK,SACLrB,SAAS,SACTR,UAAU,gBACVsC,WAAuB,YAAX7B,EACZuB,WAAuB,cAAXvB,EAAuBR,SACpC,iBAEE,ECtEX,EAT8BH,IAE1BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAACqC,EAAY,KACbrC,EAAAA,EAAAA,KAACsC,EAAU,M","sources":["pages/SignupPage/SignupHeader/SignupHeader.tsx","pages/SignupPage/SignupForm/SignupForm.tsx","pages/SignupPage/SignupPage.tsx"],"sourcesContent":["import React from 'react'\nimport './SignupHeader.css'\nimport { Link } from 'react-router-dom'\nimport { AppLogoImage } from 'components'\nimport { LazyIcon } from 'lazyUtils/LazyIcon/LazyIcon'\n\nconst SignupHeader: React.FC = (props) => {\n  return (\n    <div className='signup-header'>\n      <div className='signup-header-info'>\n        <AppLogoImage size={60} />\n        <h3 className='form-label'>Sign up</h3>\n        <p className='form-discription'>\n          Join us by creating your account\n        </p>\n      </div>\n      <Link to='../' className='link back-link'>\n        <span className='icon'>\n          <LazyIcon iconName='arrowBack' />\n        </span>\n        <span className='label'>Back</span>\n      </Link>\n    </div>\n  )\n}\n\nexport default SignupHeader\n","import React, { useEffect } from 'react';\nimport './SignupForm.css';\nimport { Input, AnchorLink, Button, DisplayFormErrors } from 'components';\nimport {\n  dispatchSignupAction,\n  dispatchRestSigupState,\n  useSignupSelector\n} from 'features/auth/signup';\nimport { useFormDataChange } from 'hooks/useFormDataChange'\nimport { SignupCredentials } from 'services/authServices'\nimport { triggerToast } from 'features/toast'\n\nconst SignupForm: React.FC = (props) => {\n  \n  const { status, message, errors, data } = useSignupSelector()\n  const [formData, handleFormDataChange] = useFormDataChange<SignupCredentials>({\n    email: '',\n    password: '',\n    confirm_password: '',\n  })\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    dispatchSignupAction(formData)\n  }\n\n  useEffect(() => {\n    dispatchRestSigupState()\n    if (status === \"succeeded\") {\n      triggerToast(\"success\", message)\n    } else if (status === \"failed\") {\n      triggerToast(\"error\", message)\n    }\n  }, [message, status])\n\n\n  return (\n    <form\n      className='signup-form'\n      onSubmit={handleSubmit}\n    >\n      <Input\n        name='email'\n        type='email'\n        value={formData.email}\n        onChange={handleFormDataChange}\n        isDisabled={status === 'loading' || status === 'succeeded'}\n        errors={errors}\n      />\n      <Input\n        name='password'\n        type='password'\n        value={formData.password}\n        onChange={handleFormDataChange}\n        isDisabled={status === 'loading' || status === 'succeeded'}\n        errors={errors}\n      />\n      <Input\n        name='confirm_password'\n        type='password'\n        value={formData.confirm_password}\n        onChange={handleFormDataChange}\n        isDisabled={status === 'loading' || status === 'succeeded'}\n        errors={errors}\n      />\n      <DisplayFormErrors field={'none'} errors={errors} />\n      {data?.detail && (\n        <p>{data.detail}</p>\n      )}\n      <div className='actions'>\n        <AnchorLink\n          to=\"/sign-in\"\n          type=\"link\"\n          iconName='signin'\n          className='signin-link'\n        >sign in</AnchorLink>\n        <Button\n          type='submit'\n          iconName='signup'\n          className='signup-button'\n          isLoaderOn={status === 'loading'}\n          isDisabled={status === 'succeeded'}\n        >sign up</Button>\n      </div>\n    </form>\n  )\n}\n\nexport default SignupForm\n","import React from 'react'\nimport './SignupPage.css'\nimport SignupHeader from './SignupHeader/SignupHeader'\nimport SignupForm from './SignupForm/SignupForm'\n\nconst SignupPage: React.FC = (props) => {\n  return (\n    <div className='signup-page'>\n      <SignupHeader />\n      <SignupForm />\n    </div>\n  )\n}\n\nexport default SignupPage\n"],"names":["props","_jsxs","className","children","_jsx","AppLogoImage","size","Link","to","LazyIcon","iconName","status","message","errors","data","useSignupSelector","formData","handleFormDataChange","useFormDataChange","email","password","confirm_password","useEffect","dispatchRestSigupState","triggerToast","onSubmit","event","preventDefault","dispatchSignupAction","Input","name","type","value","onChange","isDisabled","DisplayFormErrors","field","detail","AnchorLink","Button","isLoaderOn","SignupHeader","SignupForm"],"sourceRoot":""}